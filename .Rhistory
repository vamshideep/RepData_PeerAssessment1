k <- exp(-i*2*pi*f*t)
? exp
?pexp
pexp(6,1/5,lower.tail= FALSE)
pexp(6,1/5,lower.tail= TRUE)
install.package(KernSmooth)
install.packages(KernSmooth)
install.packages("KernSmooth")
library(KernSmooth)
install.packages("swirl")  # Installs swirl
library(swirl)  # Loads swirl
swirl()  # Runs swirl
swirl()
swirl()
install.packages("swirl")
install.packages("swirl")
library(swirl)
install_from_swirl("R_Programming")
find.package(devtools)
find.package("devtools")
find.package("Rtools")
find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
bestbets <- read.csv("BestBetUsage_Site_Collection.csv")
bestbets <- read.csv("C:\Users\vdeversh\Downloads\BestBetUsage_Site_Collection.csv")
bestbets <- read.csv("C:\\Users\\vdeversh\\Downloads\\BestBetUsage_Site_Collection.csv")
?read.csv
bestbets <- read.csv("C:\\Users\\vdeversh\\Downloads\\BestBetUsage_Site_Collection.csv",header=TRUE)
bestbets <- read.csv("C:\\Users\\vdeversh\\Downloads\\BestBetUsage_Site_Collection.csv",skip=2)
head(bestbets)
hist(bestbets$Percentage.of.Best.Bet.Clickthrough)
hist(as.numeric(bestbets$Percentage.of.Best.Bet.Clickthrough))
plot(bestbets$Search.Query.Text,(as.numeric(bestbets$Percentage.of.Best.Bet.Clickthrough))
)
plot(bestbets$Search.Query.Text,(as.numeric(bestbets$Percentage.of.Best.Bet.Clickthrough)))
library(xlsx)
install.packages("knitr")
setwd("C:/Users/vdeversh/Downloads/CourseEra/RR/Project/1/RepData_PeerAssessment1")
files.exist(data)
file.exist(data)
file.exists(data)
file.exists("./data"")
"
file.exists("./data")
activity <- read.csv("./data/activity.csv")
dim(activity)
head(activity)
is.an(activity$steps)
is.na(activity$steps)
table(is.na(activity$steps))
head(activity)
str(activity)
activity$date
test <- as.date(activity$date,"%Y%m%d")
test <- as.Date(activity$date,"%Y%m%d")
head(test)
activity$date
test <- as.Date(activity$date,"%Y-%m-%d")
head(test)
is.na(test)
table(is.na(test))
activity$date <- as.Date(activity$date,"%Y-%m-%d")
str(activity)
create.dir("./test")
dir.create("./test")
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileUrl,dest="./test/activity.zip")
list.files("./data")
list.files("./test")
unzip("./test/activity.zip")
list.files("./test")
list.files("./test")
unzip("./test/activity.zip",exdir="./test")
list.files("./test")
dir.create("./data")
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileUrl,dest="./data/activity.zip")
unzip("./data/activity.zip",exdir="./data")
activity <- read.csv("./data/activity.csv")}
activity <- read.csv("./data/activity.csv")
dim(activity)
setwd("C:/Users/vdeversh/Downloads/CourseEra/RR/Project/RepData_PeerAssessment1")
if(!file.exists("./data")){
dir.create("./data")
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileUrl,dest="./data/activity.zip")
unzip("./data/activity.zip",exdir="./data")
activity <- read.csv("./data/activity.csv")
}
dim(activity)
setwd("C:/Users/vdeversh/Downloads/CourseEra/RR/Projects")
setwd("C:/Users/vdeversh/Downloads/CourseEra/RR/Projects/RepData_PeerAssessment1")
if(!file.exists("./data")){
dir.create("./data")
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileUrl,dest="./data/activity.zip")
unzip("./data/activity.zip",exdir="./data")
activity <- read.csv("./data/activity.csv")
}
dim(activity)
activity$steps
mean(activity$steps)
mean(activity$steps,na.rm=TRUE)
library(knitr)
setwd("C:/Users/vdeversh/Downloads/CourseEra/RR/Projects/RepData_PeerAssessment1")
head(activity)
hist(activity$steps,activity$date)
library(reshape)
library(reshape2)
activitymelt <- melt(activity,steps,date)
activitymelt <- melt(activity,activiity$steps,activity$date)
activitymelt <- melt(activity,activity$steps,activity$date)
activitymelt <- melt(activity,activity$steps ~ activity$date)
activitymelt <- melt(activity,id=c("steps","date"))
activitymelt
head(activitymelt,n=10)
dim(activity)
dim(activitymelt)
cast(activitymelt,date~variable,sum)
dcast(activitymelt,date~variable,sum)
activitymelt <- melt(activity,id=c("date","interval"))
dim(activitymelt)
dcast(activitymelt,date~variable,sum)
dcast(activitymelt,date~variable,mean)
dcast(activitymelt,date~variable,mean,na.rm=TRUE)
dcast(activitymelt,date~variable,sum,na.rm=TRUE)
activitydcast <- dcast(activitymelt,date~variable,sum,na.rm=TRUE)
mean(activitydcast$steps)
steps_per_day <- aggregate(steps ~ date, activity, sum)
head(steps_per_day)
activitymelt <- melt(activity,id=c("date","interval"),na.rm=TRUE)
activitydcast <- dcast(activitymelt,date~variable,sum,na.rm=TRUE)
mean(activitydcast$steps)
median(activitydcast$steps)
hist(activitydcast$date,activitydcast$steps)
str(activitydcast)
hist(activitydcast$steps)
library(ggplot2)
ggplot(steps_per_day, aes(x = steps)) + geom_histogram(fill = "steelblue",
binwidth = 1500) + labs(title = "Histogram of Steps Taken per Day", x = "Number of Steps",
y = "Count") + theme_bw() + theme(legend.position = "bottom")
ggplot(activitydcast$steps, aes(x = steps)) + geom_histogram(fill = "steelblue",
binwidth = 1500) + labs(title = "Histogram of Steps Taken per Day", x = "Number of Steps",
y = "Count") + theme_bw() + theme(legend.position = "bottom")
steps_per_day <- aggregate(steps ~ date, activity, sum)
ggplot(activitydcast$steps, aes(x = steps)) + geom_histogram(fill = "steelblue",
binwidth = 1500) + labs(title = "Histogram of Steps Taken per Day", x = "Number of Steps",
y = "Count") + theme_bw() + theme(legend.position = "bottom")
steps_per_day <- aggregate(steps ~ date, activity, sum)
ggplot(activitydcast$steps, aes(x = steps)) + geom_histogram(fill = "steelblue",
binwidth = 1500) + labs(title = "Histogram of Steps Taken per Day", x = "Number of Steps",
y = "Count") + theme_bw() + theme(legend.position = "bottom")
class(steps_per_day)
head(steps_per_day)
ggplot(activitydcast, aes(x = steps)) + geom_histogram(fill = "steelblue",
binwidth = 1500) + labs(title = "Histogram of Steps Taken per Day", x = "Number of Steps",
y = "Count") + theme_bw() + theme(legend.position = "bottom")
ggplot(activitydcast, aes(x = steps)) + geom_histogram() + labs(title = "Histogram of Steps Taken per Day", x = "Number of Steps",
y = "Count") + theme_bw() + theme(legend.position = "bottom")
ggplot(activitydcast, aes(x = steps)) + geom_histogram() + labs(x = "Number of Steps taken per day",
y = "Sum") + theme_bw() + theme(legend.position = "bottom")
head(activity)
head(activity[,activity$interval==5])
activity$interval==5
table(activity$interval==5)
activity[activity$interval==5]
activity[activity$interval==5,]
head(activity)
head(activity,n=10)
head(activity,n=20)
activitymelt2 <- melt(activity,id=c("interval","date"))
activitydcast2 <- dcast(interval~variable,mean)
activitymelt2
dim(activitymelt2)
activitymelt2 <- melt(activity,id=c("interval","date"),na.rm=TRUE)
activitydcast2 <- dcast(activitymelt2,interval~variable,mean)
head(activitydacst2)
head(activitydcast2)
head(activitydcast2,n=30)
steps_pi <- aggregate(activity$steps, by = list(interval = activity$interval), FUN = mean,
na.rm = T)
head(steps_pi)
head(activitydcast2,n=5)
summary(activitydcast2$steps)
?which.max
which.max(activitydcast2$steps)
activitydcast2$interval[which.max(activitydcast2$steps)]
plot(activitydcast$interval,activitydcast2$steps)
plot(activitydcast2$interval,activitydcast2$steps)
plot(activitydcast2$interval,activitydcast2$steps,type="1")
plot(activitydcast2$interval,activitydcast2$steps)
ggplot(activitydcast2,aes(x=interval,y=steps))
ggplot(activitydcast2,aes(x=interval,y=steps))+geom_lines()
ggplot(activitydcast2,aes(x=interval,y=steps))+geom_line()
is.na(activity)
table(is.na(activity))
head(is.na(activity))
complete.cases(activity)
head(complete.cases(activity))
tabel(complete.cases(activity))
table(complete.cases(activity))
activity(complete.cases(activity))
head(activity[complete.cases(activity)])
head(activity[complete.cases(activity),])
head(activity[!complete.cases(activity),])
is.na(activity$date)
table(is.na(activity$date))
table(is.na(activity$interval))
table(is.na(activity$steps))
table(complete.cases(activity))
missingindexes <- is.na(activity$steps)
activity$steps[missingindexes]
head(activity[missingindexes] )
head(activity[missingindexes,])
head(activitydacst2)
head(activitydcast2)
head(activity[missingindexes,])
head(activitydcast2)
missingactivity <- (activity[missingindexes,])
missingactivity$interval
lapply(missingindexes, FUN = function(idx){
missinginterval <- (activity[idx,interval])
})
lapply(missingindexes, FUN = function(idx){
missinginterval <- (activity[idx,]$interval)
})
head(activitydcast2)
impute_means <- function(tbl, defaults) {
na_indices <- which(is.na(tbl$steps))
defaults <- steps_per_interval
na_replacements <- unlist(lapply(na_indices, FUN = function(idx) {
interval = tbl[idx, ]$interval
defaults[defaults$interval == interval, ]$steps
}))
imp_steps <- tbl$steps
imp_steps[na_indices] <- na_replacements
imp_steps
}
complete_tbl <- data.frame(steps = impute_means(activity, activitydcast2), date = tbl$date,
interval = tbl$interval)
impute_means <- function(tbl, defaults) {
na_indices <- which(is.na(tbl$steps))
deafults
na_replacements <- unlist(lapply(na_indices, FUN = function(idx) {
interval = tbl[idx, ]$interval
defaults[defaults$interval == interval, ]$steps
}))
imp_steps <- tbl$steps
imp_steps[na_indices] <- na_replacements
imp_steps
}
complete_tbl <- data.frame(steps = impute_means(activity, activitydcast2), date = tbl$date,
interval = tbl$interval)
impute_means <- function(tbl, defaults) {
na_indices <- which(is.na(tbl$steps))
defaults
na_replacements <- unlist(lapply(na_indices, FUN = function(idx) {
interval = tbl[idx, ]$interval
defaults[defaults$interval == interval, ]$steps
}))
imp_steps <- tbl$steps
imp_steps[na_indices] <- na_replacements
imp_steps
}
complete_tbl <- data.frame(steps = impute_means(activity, activitydcast2), date = tbl$date,
interval = tbl$interval)
complete_tbl <- data.frame(steps = impute_means(activity, activitydcast2), date = activity$date,
interval = activity$interval)
head(complete_tbl)
missing_indices <- which(is.na(activity$steps))
missing_steps <- unlist(lapply(missing_indices, FUN = function(idx) {
interval = activity[idx, ]$interval
activitydcast2[activitydcast2$interval == interval, ]$steps
}))
missing_indices <- which(is.na(activity$steps))
missing_steps <- unlist(lapply(missing_indices, FUN = function(idx) {
interval = activity[idx, ]$interval
activitydcast2[activitydcast2$interval == interval, ]$steps
}))
new_steps <- activity$steps
new_steps[missing_indices] <- missing_steps
new_activity <- activity
new_activity$steps <- new_steps
head(new_activity)
head(complete_tbl)
ggplot(activitydcast, aes(x = steps)) + geom_histogram() + labs(x = "Number of Steps taken per day",
y = "Sum") )
ggplot(activitydcast, aes(x = steps)) + geom_histogram() + labs(x = "Number of Steps taken per day",
y = "Sum")
ggplot(activitydcast, aes(x = steps)) + geom_histogram(binwidth=1000) + labs(x = "Number of Steps taken per day",
y = "Sum")
ggplot(activitydcast, aes(x = steps)) + geom_histogram(binwidth=2000) + labs(x = "Number of Steps taken per day",
y = "Sum")
ggplot(activitydcast2,aes(x=interval,y=steps))+geom_line()
new_activity$day <- as.factor(weekdays(new_activity$date))
str(new_activity)
str(activity)
activity$date <- as.Date(activity$date,"%Y-%m-%d")
new_activity <- activity
new_activity$steps <- new_steps
head(activity)
head(new_activity)
str(activity)
new_activity$day <- as.factor(weekdays(new_activity$date))
Weekend_activity <- subset(new_activity, day %in% c("Saturday", "Sunday"))
weekday_activity <- subset(new_activity, !day %in% c("Saturday", "Sunday"))
Weekend_activity
head(Weekend_activity)
head(weekday_activity)
weekend_activitymelt <- melt(weekend_activity,id=c("date","interval"))
weekend_activity <- subset(new_activity, day %in% c("Saturday", "Sunday"))
weekday_activity <- subset(new_activity, !day %in% c("Saturday", "Sunday"))
head(weekend_activity)
head(weekday_activity)
weekend_activitymelt <- melt(weekend_activity,id=c("date","interval"))
weekend_activitydcast <- dcast(weekend_activitymelt,interval~variable,mean)
head(weekend_activitydcast)
weekend_activitymelt <- melt(weekend_activity,id=c("date","interval"),variables=c("steps"))
weekend_activitydcast <- dcast(weekend_activitymelt,interval~variable,mean)
head(weekend_activitydcast)
weekend_activitymelt <- melt(weekend_activity,id=c("date","interval"),variables=c("steps"),na.rm=TRUE)
weekend_activitydcast <- dcast(weekend_activitymelt,interval~,mean)
weekend_activitydcast <- dcast(weekend_activitymelt,interval~variables,mean)
weekend_activitydcast <- dcast(weekend_activitymelt,interval~variable,mean)
weekend_activitymelt <- melt(weekend_activity,id=c("date","interval"),variable=c("steps"),na.rm=TRUE)
weekend_activitydcast <- dcast(weekend_activitymelt,interval~variable,mean)
weekend_activitydcast <- dcast(weekend_activitymelt,interval~steps,mean)
weekend_activitydcast <- dcast(weekend_activitymelt,interval~steps,mean,na.rm=TRUE)
head(weekend_activitydcast)
weekend_activitymelt <- melt(weekend_activity,id=c("date","interval"),na.rm=TRUE)
weekend_activitydcast <- dcast(weekend_activitymelt,interval~steps,mean,na.rm=TRUE)
head(weekend_activitydcast)
weekend_activitydcast <- dcast(weekend_activitymelt,interval~variable,mean,na.rm=TRUE)
weekend_activitydcast <- dcast(weekend_activitymelt,interval~variable,mean,variable=="steps",na.rm=TRUE)
head(weekend_activitydcast)
weekend_activitymelt <- melt(weekend_activity,id=c("date","interval"),na.rm=TRUE)
head(weekend_activity_melt)
head(weekend_activitymelt)
weekend_activitydcast <- dcast(weekend_activitymelt,interval~variable,mean,subset=.(variable=="steps"),na.rm=TRUE)
weekend_activitydcast <- dcast(weekend_activitymelt,interval~variable,mean,subset=.(variable=="steps"))
weekend_activitymelt <- melt(weekend_activity,id=c("date","interval"),variable.name=c("steps")na.rm=TRUE)
weekend_activitymelt <- melt(weekend_activity,id=c("date","interval"),variable.name="steps",na.rm=TRUE)
head(weekend_activitymelt)
weekend_activitydcast <- dcast(weekend_activitymelt,interval~variable,mean,subset=.(variable=="steps"))
weekend_activitydcast <- dcast(weekend_activitymelt,interval~variable,mean)
ls()
weekend_activitymelt <- melt(weekend_activity,id=c("date","interval"),variable.name="steps",na.rm=TRUE)
head(weekend_activitymelt)
weekend_activitydcast <- dcast(weekend_activitymelt,interval~variable,mean)
weekend_activitydcast <- dcast(weekend_activitymelt,interval~variables,mean)
head(weekday_activity)
weekend_activitymelt <- melt(weekend_activity,id=c("date","interval"),variable.name="steps",na.rm=TRUE)
head(weekend_activitymelt)
tail(weekend_activitymelt)
weekend_activitymelt <- melt(weekend_activity,id=c("date","interval"),na.rm=TRUE)
head(weekend_activitymelt)
tail(weekend_activitymelt)
weekend_activitydcast <- dcast(weekend_activitymelt,data+interval~variables,mean)
weekend_activitydcast <- dcast(weekend_activitymelt,data+interval~variable,mean)
weekend_activitydcast <- dcast(weekend_activitymelt,date+interval~variable,mean)
weekendminusday_activity <- data.frame(weekend_activity$date,weekend_activity$interval,weekend_activity$ateps)
weekendminusday_activity <- data.frame(weekend_activity$date,weekend_activity$interval,weekend_activity$steps)
weekend_activitymelt <- melt(weekendminusday_activity,id=c("date","interval"),na.rm=TRUE)
head(weekend_activitymelt)
head(weekend_activity)
head(weekday_activity)
calc_steps_per_interval <- function(tbl) {
steps_pi <- aggregate(tbl$steps, by = list(interval = tbl$interval), FUN = mean,
na.rm = T)
# convert to integers for plotting
steps_pi$interval <- as.integer(levels(steps_pi$interval)[steps_pi$interval])
colnames(steps_pi) <- c("interval", "steps")
steps_pi
}
weekday_spi <- calc_steps_per_interval(weekday_activity)
tbl <- weekday_activit
tbl <- weekday_activity
steps_pi <- aggregate(tbl$steps, by = list(interval = tbl$interval), FUN = mean,
na.rm = T)
steps_pi$interval <- as.integer(levels(steps_pi$interval)[steps_pi$interval])
calc_day_of_week_data <- function(tbl) {
tbl$weekday <- as.factor(weekdays(tbl$date))
weekend_data <- subset(tbl, weekday %in% c("Saturday", "Sunday"))
weekday_data <- subset(tbl, !weekday %in% c("Saturday", "Sunday"))
weekend_spi <- calc_steps_per_interval(weekend_data)
weekday_spi <- calc_steps_per_interval(weekday_data)
weekend_spi$dayofweek <- rep("weekend", nrow(weekend_spi))
weekday_spi$dayofweek <- rep("weekday", nrow(weekday_spi))
day_of_week_data <- rbind(weekend_spi, weekday_spi)
day_of_week_data$dayofweek <- as.factor(day_of_week_data$dayofweek)
day_of_week_data
}
calc_steps_per_interval <- function(tbl) {
steps_pi <- aggregate(tbl$steps, by = list(interval = tbl$interval), FUN = mean,
na.rm = T)
# convert to integers for plotting
steps_pi$interval <- as.integer(levels(steps_pi$interval)[steps_pi$interval])
colnames(steps_pi) <- c("interval", "steps")
steps_pi
}
calc_day_of_week_data <- function(tbl) {
tbl$weekday <- as.factor(weekdays(tbl$date))
weekend_data <- subset(tbl, weekday %in% c("Saturday", "Sunday"))
weekday_data <- subset(tbl, !weekday %in% c("Saturday", "Sunday"))
weekend_spi <- calc_steps_per_interval(weekend_data)
weekday_spi <- calc_steps_per_interval(weekday_data)
weekend_spi$dayofweek <- rep("weekend", nrow(weekend_spi))
weekday_spi$dayofweek <- rep("weekday", nrow(weekday_spi))
day_of_week_data <- rbind(weekend_spi, weekday_spi)
day_of_week_data$dayofweek <- as.factor(day_of_week_data$dayofweek)
day_of_week_data
}
plot_day_of_week_comparison <- function(dow_data) {
ggplot(dow_data, aes(x = interval, y = steps)) + geom_line(color = "steelblue",
size = 1) + facet_wrap(~dayofweek, nrow = 2, ncol = 1) + labs(x = "Interval",
y = "Number of steps") + theme_bw()
}
day_of_week_data <- calc_day_of_week_data(new_activity)
plot_day_of_week_comparison(day_of_week_data)
